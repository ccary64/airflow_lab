services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    ports:
      - "5432:5432"
    env_file:
      .env
  redis:
    image: redis:7-bullseye
    ports:
      - "6379:6379"
  airflow-init:
    build:
      context: "."
      dockerfile: Dockerfile
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        # newer versions of airflow => airflow db migrate &&  \
        airflow db init && \
        airflow users create \
          --role Admin \
          --username admin \
          --password admin \
          --email admin@airflow.com \
          --firstname admin \
          --lastname admin
    restart: on-failure
    env_file:
      .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
      - ./task_logger.py:/opt/airflow/config/task_logger.py
    depends_on:
      - postgres
      - redis
  airflow-scheduler:
    build:
      context: "."
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    command: airflow scheduler
    hostname: airflow_scheduler
    restart: always
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
      - ./task_logger.py:/opt/airflow/config/task_logger.py
    env_file:
      .env
    depends_on:
      - postgres
      - redis
  airflow-worker-1:
    build:
      context: "."
      dockerfile: Dockerfile
    container_name: airflow_worker_1
    command: airflow celery worker
    hostname: airflow_worker_1
    restart: always
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
      - ./task_logger.py:/opt/airflow/config/task_logger.py
      # This is used to launch another docker container
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      .env
    depends_on:
      - airflow-scheduler
  airflow-worker-2:
    build:
      context: "."
      dockerfile: Dockerfile
    container_name: airflow_worker_2
    command: airflow celery worker
    hostname: airflow_worker_2
    restart: always
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
      - ./task_logger.py:/opt/airflow/config/task_logger.py
      # This is used to launch another docker container
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      .env
    depends_on:
      - airflow-scheduler
  airflow-triggerer:
    build:
      context: "."
      dockerfile: Dockerfile
    container_name: airflow_triggerer
    command: airflow triggerer
    hostname: airflow_triggerer
    restart: always
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
      - ./task_logger.py:/opt/airflow/config/task_logger.py
      # This is used to launch another docker container
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      .env
    depends_on:
      - airflow-scheduler
  airflow-webserver:
    build:
      context: "."
      dockerfile: Dockerfile
    container_name: airflow_webserver
    command: airflow webserver 
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
      - ./task_logger.py:/opt/airflow/config/task_logger.py
    env_file:
      .env
    depends_on:
      - postgres
      - redis